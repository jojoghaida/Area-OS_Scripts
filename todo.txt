//Joe 
--------

-banner communicator /
-deselector
-selection interface HUD @loadSelectionDetails /
-menu Interface
-progression location>neighborhood>building>level(layout)>groups(maybe)>items
!-getting overlapping furniture set loads on the first "[0]" set

//Ryan 
--------
# Area-OS_Scripts
Scripts for Area-OS

#Objectives 
 //--> Refactor code. 
 //--> Organize file structure. 
 
#Interface Commands  
 //--> deals with renderer, constructs the scene. Responsible for the Ui, controls the camera, window and viewing details for        User. Camera functions and controls. Refresh to update viewport. Click events.  
    //--> Pressure.js - touchforce 
    //--> ThreeJS - 3d 
      //-->OrbitControls.js - Camera controls. 
         //--> PanCam - home-tuned version of orbit controls, might delete. 
    //--> TwoJs - 2d, for interface.
    //--> Anything dealing with viewport and userinputs. 
    
#Geometry Commands 
  //--> Turns ThreeJS into Rhino; geometry functions. 
  //--> All self-written functions. Joe will add comments. 

#StyleSheet 
  //--> All styling, color schema. Like a material library. 
  
#Sprite 
  //--> HUD 
  //--> Canvas is rendeirng ontop of ThreeJs; clickEvents hit Canvas which in turn controls ThreeJs. We also have svg elements sitting on top of canvas. Ideally, we want to not have to deal with these layers - we want ThreeJs and TwoJS.  

#VisualInputs 
  //--> Bottom svg 
#VisualFeedback
  //--> Top svg. 

#MeshLibrary 
 //--> What actually loads the building. 

 
